"""
This type stub file was generated by pyright.
"""

from typing import Collection, Dict, Mapping, Optional, Sequence
from tensorflow.core.framework import graph_pb2
from tensorflow.core.protobuf import meta_graph_pb2, saver_pb2

"""Defines utilities involving SavedModel."""
_SignatureDefMap = Mapping[str, meta_graph_pb2.SignatureDef]
def get_signatures_from_saved_model(saved_model_path: str, signature_keys: Optional[Sequence[str]] = ..., tags: Optional[Collection[str]] = ...) -> Dict[str, meta_graph_pb2.SignatureDef]:
  """Gets a map from signature keys to their SignatureDef.

  Args:
    saved_model_path: Path to the saved model.
    signature_keys: List of keys identifying SignatureDef to retrieve. If None,
      retrieve all except the init signature.
    tags: Set of tags identifying the MetaGraphDef within the SavedModel.

  Returns:
    A map from signature_key to its SignatureDef.
  """
  ...

def create_empty_output_dir(output_directory: str, overwrite: bool = ...) -> None:
  """Creates the `output_directory`.

  If `output_directory` already exists, it recursively deletes all contents
  inside the directory.

  Also creates the parent & intermediate directories.

  Args:
    output_directory: Output directory.
    overwrite: Where to clean the output directory if exists.
  """
  ...

def save_model_v1(graph_def: graph_pb2.GraphDef, output_dir: str, signature_def_map: _SignatureDefMap, tags: Collection[str], init_op_name: Optional[str] = ..., saver_def: Optional[saver_pb2.SaverDef] = ..., checkpoint_dir: Optional[str] = ..., function_aliases: Optional[Mapping[str, str]] = ..., asset_file_defs: Sequence[meta_graph_pb2.AssetFileDef] = ...) -> None:
  """Saves the model.

  Saves the provided graph def as SavedModel.
  Uses TF1 SavedModel semantics (i.e. no object graph).

  Args:
    graph_def: Graph to save.
    output_dir: Output directory for the SavedModel.
    signature_def_map: Mapping of signature def key -> SignatureDef.
    tags: Tags for the meta graph def.
    init_op_name: Name of the node for initialization.
    saver_def: `saver_pb2.SaverDef` to create a `saver.Saver` from. The created
      saver will be used to save and load variables. This may be `None` if no
      variables exist in the graph.
    checkpoint_dir: Path to checkpoint file where variable values are saved.
    function_aliases: Function name -> function alias mapping.
    asset_file_defs: `AssetFileDef`s that associates the asset files and the
      name of the tensors to which the asset file names should be fed. The
      caller should make sure the asset files exist in the output saved model
      directory.

  Raises:
    ValueError iff the graph does not contain a valid signature or the file
    prefix tensor is not found in the graph.
  """
  ...

