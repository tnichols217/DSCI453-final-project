"""
This type stub file was generated by pyright.
"""

class BufferedInputStream:
    def __init__(self, filename: str, buffer_size: int, token: TransactionToken = ...) -> None:
        ...
    
    def read(self, arg0: int) -> bytes:
        ...
    
    def readline(self) -> bytes:
        ...
    
    def seek(self, arg0: int) -> None:
        ...
    
    def tell(self) -> int:
        ...
    


class FileStatistics:
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    @property
    def is_directory(self) -> bool:
        ...
    
    @property
    def length(self) -> int:
        ...
    
    @property
    def mtime_nsec(self) -> int:
        ...
    


class TransactionToken:
    def __init__(self, *args, **kwargs) -> None:
        ...
    


class WritableFile:
    def __init__(self, filename: str, mode: str, token: TransactionToken = ...) -> None:
        ...
    
    def append(self, arg0: str) -> None:
        ...
    
    def close(self) -> None:
        ...
    
    def flush(self) -> None:
        ...
    
    def tell(self) -> int:
        ...
    


def CopyFile(src: str, target: str, overwrite: bool, token: TransactionToken = ...) -> None:
    ...

def CreateDir(dirname: str, token: TransactionToken = ...) -> None:
    ...

def DeleteFile(filename: str, token: TransactionToken = ...) -> None:
    ...

def DeleteRecursively(dirname: str, token: TransactionToken = ...) -> None:
    ...

def FileExists(filename: str, token: TransactionToken = ...) -> None:
    ...

def GetChildren(dirname: str, token: TransactionToken = ...) -> list[str]:
    ...

def GetMatchingFiles(pattern: str, token: TransactionToken = ...) -> list[str]:
    ...

def GetRegisteredSchemes() -> list[str]:
    ...

def HasAtomicMove(arg0: str) -> bool:
    ...

def IsDirectory(dirname: str, token: TransactionToken = ...) -> bool:
    ...

def ReadFileToString(filename: str, token: TransactionToken = ...) -> bytes:
    ...

def RecursivelyCreateDir(dirname: str, token: TransactionToken = ...) -> None:
    ...

def RenameFile(src: str, target: str, overwrite: bool, token: TransactionToken = ...) -> None:
    ...

def Stat(filename: str, token: TransactionToken = ...) -> FileStatistics:
    ...

def WriteStringToFile(filename: str, data: str, token: TransactionToken = ...) -> None:
    ...

