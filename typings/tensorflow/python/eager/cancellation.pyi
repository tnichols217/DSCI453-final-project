"""
This type stub file was generated by pyright.
"""

"""Cancellation support for eager execution."""
class CancellationManager:
  """A mechanism for cancelling blocking computation."""
  __slots__ = ...
  def __init__(self) -> None:
    ...
  
  @property
  def is_cancelled(self): # -> bool:
    """Returns `True` if `CancellationManager.start_cancel` has been called."""
    ...
  
  def start_cancel(self): # -> None:
    """Cancels blocking operations that have been registered with this object."""
    ...
  
  def get_cancelable_function(self, concrete_function): # -> Callable[..., Any]:
    ...
  


_active_context = ...
def context(): # -> Any | None:
  ...

class CancellationManagerContext:
  """A Python context for wrapping a cancellable ConcreteFunction."""
  def __init__(self, cancellation_manager) -> None:
    ...
  
  def __enter__(self): # -> None:
    ...
  
  def __exit__(self, exc_type, exc_value, exc_tb): # -> None:
    ...
  


