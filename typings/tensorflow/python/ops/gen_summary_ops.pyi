"""
This type stub file was generated by pyright.
"""

from tensorflow.security.fuzzing.py import annotation_types as _atypes
from typing import Any, TypeVar
from typing_extensions import Annotated

"""Python wrappers around TensorFlow ops.

This file is MACHINE GENERATED! Do not edit.
"""
def close_summary_writer(writer: Annotated[Any, _atypes.Resource], name=...): # -> object | Operation | None:
  r"""TODO: add doc.

  Args:
    writer: A `Tensor` of type `resource`.
    name: A name for the operation (optional).

  Returns:
    The created Operation.
  """
  ...

CloseSummaryWriter = ...
def close_summary_writer_eager_fallback(writer: Annotated[Any, _atypes.Resource], name, ctx): # -> None:
  ...

def create_summary_db_writer(writer: Annotated[Any, _atypes.Resource], db_uri: Annotated[Any, _atypes.String], experiment_name: Annotated[Any, _atypes.String], run_name: Annotated[Any, _atypes.String], user_name: Annotated[Any, _atypes.String], name=...): # -> object | Operation | None:
  r"""TODO: add doc.

  Args:
    writer: A `Tensor` of type `resource`.
    db_uri: A `Tensor` of type `string`.
    experiment_name: A `Tensor` of type `string`.
    run_name: A `Tensor` of type `string`.
    user_name: A `Tensor` of type `string`.
    name: A name for the operation (optional).

  Returns:
    The created Operation.
  """
  ...

CreateSummaryDbWriter = ...
def create_summary_db_writer_eager_fallback(writer: Annotated[Any, _atypes.Resource], db_uri: Annotated[Any, _atypes.String], experiment_name: Annotated[Any, _atypes.String], run_name: Annotated[Any, _atypes.String], user_name: Annotated[Any, _atypes.String], name, ctx): # -> None:
  ...

def create_summary_file_writer(writer: Annotated[Any, _atypes.Resource], logdir: Annotated[Any, _atypes.String], max_queue: Annotated[Any, _atypes.Int32], flush_millis: Annotated[Any, _atypes.Int32], filename_suffix: Annotated[Any, _atypes.String], name=...): # -> object | Operation | None:
  r"""TODO: add doc.

  Args:
    writer: A `Tensor` of type `resource`.
    logdir: A `Tensor` of type `string`.
    max_queue: A `Tensor` of type `int32`.
    flush_millis: A `Tensor` of type `int32`.
    filename_suffix: A `Tensor` of type `string`.
    name: A name for the operation (optional).

  Returns:
    The created Operation.
  """
  ...

CreateSummaryFileWriter = ...
def create_summary_file_writer_eager_fallback(writer: Annotated[Any, _atypes.Resource], logdir: Annotated[Any, _atypes.String], max_queue: Annotated[Any, _atypes.Int32], flush_millis: Annotated[Any, _atypes.Int32], filename_suffix: Annotated[Any, _atypes.String], name, ctx): # -> None:
  ...

def flush_summary_writer(writer: Annotated[Any, _atypes.Resource], name=...): # -> object | Operation | None:
  r"""TODO: add doc.

  Args:
    writer: A `Tensor` of type `resource`.
    name: A name for the operation (optional).

  Returns:
    The created Operation.
  """
  ...

FlushSummaryWriter = ...
def flush_summary_writer_eager_fallback(writer: Annotated[Any, _atypes.Resource], name, ctx): # -> None:
  ...

def import_event(writer: Annotated[Any, _atypes.Resource], event: Annotated[Any, _atypes.String], name=...): # -> object | Operation | None:
  r"""TODO: add doc.

  Args:
    writer: A `Tensor` of type `resource`.
    event: A `Tensor` of type `string`.
    name: A name for the operation (optional).

  Returns:
    The created Operation.
  """
  ...

ImportEvent = ...
def import_event_eager_fallback(writer: Annotated[Any, _atypes.Resource], event: Annotated[Any, _atypes.String], name, ctx): # -> None:
  ...

def summary_writer(shared_name: str = ..., container: str = ..., name=...) -> Annotated[Any, _atypes.Resource]:
  r"""TODO: add doc.

  Args:
    shared_name: An optional `string`. Defaults to `""`.
    container: An optional `string`. Defaults to `""`.
    name: A name for the operation (optional).

  Returns:
    A `Tensor` of type `resource`.
  """
  ...

SummaryWriter = ...
def summary_writer_eager_fallback(shared_name: str, container: str, name, ctx) -> Annotated[Any, _atypes.Resource]:
  ...

def write_audio_summary(writer: Annotated[Any, _atypes.Resource], step: Annotated[Any, _atypes.Int64], tag: Annotated[Any, _atypes.String], tensor: Annotated[Any, _atypes.Float32], sample_rate: Annotated[Any, _atypes.Float32], max_outputs: int = ..., name=...): # -> object | Operation | None:
  r"""Writes an audio summary.

  Writes encoded audio summary `tensor` at `step` with `tag` using summary `writer`.
  `sample_rate` is the audio sample rate is Hz.

  Args:
    writer: A `Tensor` of type `resource`.
    step: A `Tensor` of type `int64`.
    tag: A `Tensor` of type `string`.
    tensor: A `Tensor` of type `float32`.
    sample_rate: A `Tensor` of type `float32`.
    max_outputs: An optional `int` that is `>= 1`. Defaults to `3`.
    name: A name for the operation (optional).

  Returns:
    The created Operation.
  """
  ...

WriteAudioSummary = ...
def write_audio_summary_eager_fallback(writer: Annotated[Any, _atypes.Resource], step: Annotated[Any, _atypes.Int64], tag: Annotated[Any, _atypes.String], tensor: Annotated[Any, _atypes.Float32], sample_rate: Annotated[Any, _atypes.Float32], max_outputs: int, name, ctx): # -> None:
  ...

def write_graph_summary(writer: Annotated[Any, _atypes.Resource], step: Annotated[Any, _atypes.Int64], tensor: Annotated[Any, _atypes.String], name=...): # -> object | Operation | None:
  r"""Writes a graph summary.

  Writes TensorFlow graph `tensor` at `step` using summary `writer`.

  Args:
    writer: A `Tensor` of type `resource`.
    step: A `Tensor` of type `int64`.
    tensor: A `Tensor` of type `string`.
    name: A name for the operation (optional).

  Returns:
    The created Operation.
  """
  ...

WriteGraphSummary = ...
def write_graph_summary_eager_fallback(writer: Annotated[Any, _atypes.Resource], step: Annotated[Any, _atypes.Int64], tensor: Annotated[Any, _atypes.String], name, ctx): # -> None:
  ...

TV_WriteHistogramSummary_T = TypeVar("TV_WriteHistogramSummary_T", _atypes.BFloat16, _atypes.Bool, _atypes.Float32, _atypes.Float64, _atypes.Half, _atypes.Int16, _atypes.Int32, _atypes.Int64, _atypes.Int8, _atypes.UInt16, _atypes.UInt32, _atypes.UInt64, _atypes.UInt8)
def write_histogram_summary(writer: Annotated[Any, _atypes.Resource], step: Annotated[Any, _atypes.Int64], tag: Annotated[Any, _atypes.String], values: Annotated[Any, TV_WriteHistogramSummary_T], name=...): # -> object | Operation | None:
  r"""Writes a histogram summary.

  Writes histogram `values` at `step` with `tag` using summary `writer`.

  Args:
    writer: A `Tensor` of type `resource`.
    step: A `Tensor` of type `int64`.
    tag: A `Tensor` of type `string`.
    values: A `Tensor`. Must be one of the following types: `float32`, `float64`, `int32`, `uint8`, `int16`, `int8`, `int64`, `bfloat16`, `uint16`, `half`, `uint32`, `uint64`, `bool`.
    name: A name for the operation (optional).

  Returns:
    The created Operation.
  """
  ...

WriteHistogramSummary = ...
def write_histogram_summary_eager_fallback(writer: Annotated[Any, _atypes.Resource], step: Annotated[Any, _atypes.Int64], tag: Annotated[Any, _atypes.String], values: Annotated[Any, TV_WriteHistogramSummary_T], name, ctx): # -> None:
  ...

TV_WriteImageSummary_T = TypeVar("TV_WriteImageSummary_T", _atypes.Float32, _atypes.Float64, _atypes.Half, _atypes.UInt8)
def write_image_summary(writer: Annotated[Any, _atypes.Resource], step: Annotated[Any, _atypes.Int64], tag: Annotated[Any, _atypes.String], tensor: Annotated[Any, TV_WriteImageSummary_T], bad_color: Annotated[Any, _atypes.UInt8], max_images: int = ..., name=...): # -> object | Operation | None:
  r"""Writes an image summary.

  Writes image `tensor` at `step` with `tag` using summary `writer`.
  `tensor` is image with shape [height, width, channels].

  Args:
    writer: A `Tensor` of type `resource`.
    step: A `Tensor` of type `int64`.
    tag: A `Tensor` of type `string`.
    tensor: A `Tensor`. Must be one of the following types: `uint8`, `float64`, `float32`, `half`.
    bad_color: A `Tensor` of type `uint8`.
    max_images: An optional `int` that is `>= 1`. Defaults to `3`.
    name: A name for the operation (optional).

  Returns:
    The created Operation.
  """
  ...

WriteImageSummary = ...
def write_image_summary_eager_fallback(writer: Annotated[Any, _atypes.Resource], step: Annotated[Any, _atypes.Int64], tag: Annotated[Any, _atypes.String], tensor: Annotated[Any, TV_WriteImageSummary_T], bad_color: Annotated[Any, _atypes.UInt8], max_images: int, name, ctx): # -> None:
  ...

def write_raw_proto_summary(writer: Annotated[Any, _atypes.Resource], step: Annotated[Any, _atypes.Int64], tensor: Annotated[Any, _atypes.String], name=...): # -> object | Operation | None:
  r"""Writes a serialized proto summary.

  Writes `tensor`, a serialized proto at `step` using summary `writer`.

  Args:
    writer: A `Tensor` of type `resource`.
    step: A `Tensor` of type `int64`.
    tensor: A `Tensor` of type `string`.
    name: A name for the operation (optional).

  Returns:
    The created Operation.
  """
  ...

WriteRawProtoSummary = ...
def write_raw_proto_summary_eager_fallback(writer: Annotated[Any, _atypes.Resource], step: Annotated[Any, _atypes.Int64], tensor: Annotated[Any, _atypes.String], name, ctx): # -> None:
  ...

TV_WriteScalarSummary_T = TypeVar("TV_WriteScalarSummary_T", _atypes.BFloat16, _atypes.Float32, _atypes.Float64, _atypes.Half, _atypes.Int16, _atypes.Int32, _atypes.Int64, _atypes.Int8, _atypes.UInt16, _atypes.UInt32, _atypes.UInt64, _atypes.UInt8)
def write_scalar_summary(writer: Annotated[Any, _atypes.Resource], step: Annotated[Any, _atypes.Int64], tag: Annotated[Any, _atypes.String], value: Annotated[Any, TV_WriteScalarSummary_T], name=...): # -> object | Operation | None:
  r"""Writes a scalar summary.

  Writes scalar `value` at `step` with `tag` using summary `writer`.

  Args:
    writer: A `Tensor` of type `resource`.
    step: A `Tensor` of type `int64`.
    tag: A `Tensor` of type `string`.
    value: A `Tensor`. Must be one of the following types: `float32`, `float64`, `int32`, `uint8`, `int16`, `int8`, `int64`, `bfloat16`, `uint16`, `half`, `uint32`, `uint64`.
    name: A name for the operation (optional).

  Returns:
    The created Operation.
  """
  ...

WriteScalarSummary = ...
def write_scalar_summary_eager_fallback(writer: Annotated[Any, _atypes.Resource], step: Annotated[Any, _atypes.Int64], tag: Annotated[Any, _atypes.String], value: Annotated[Any, TV_WriteScalarSummary_T], name, ctx): # -> None:
  ...

TV_WriteSummary_T = TypeVar("TV_WriteSummary_T", _atypes.BFloat16, _atypes.Bool, _atypes.Complex128, _atypes.Complex64, _atypes.Float16, _atypes.Float32, _atypes.Float64, _atypes.Float8e4m3fn, _atypes.Float8e5m2, _atypes.Half, _atypes.Int16, _atypes.Int32, _atypes.Int4, _atypes.Int64, _atypes.Int8, _atypes.QInt16, _atypes.QInt32, _atypes.QInt8, _atypes.QUInt16, _atypes.QUInt8, _atypes.Resource, _atypes.String, _atypes.UInt16, _atypes.UInt32, _atypes.UInt4, _atypes.UInt64, _atypes.UInt8, _atypes.Variant)
def write_summary(writer: Annotated[Any, _atypes.Resource], step: Annotated[Any, _atypes.Int64], tensor: Annotated[Any, TV_WriteSummary_T], tag: Annotated[Any, _atypes.String], summary_metadata: Annotated[Any, _atypes.String], name=...): # -> object | Operation | None:
  r"""Writes a tensor summary.

  Writes `tensor` at `step` with `tag` using summary `writer`.

  Args:
    writer: A `Tensor` of type `resource`.
    step: A `Tensor` of type `int64`.
    tensor: A `Tensor`.
    tag: A `Tensor` of type `string`.
    summary_metadata: A `Tensor` of type `string`.
    name: A name for the operation (optional).

  Returns:
    The created Operation.
  """
  ...

WriteSummary = ...
def write_summary_eager_fallback(writer: Annotated[Any, _atypes.Resource], step: Annotated[Any, _atypes.Int64], tensor: Annotated[Any, TV_WriteSummary_T], tag: Annotated[Any, _atypes.String], summary_metadata: Annotated[Any, _atypes.String], name, ctx): # -> None:
  ...

