"""
This type stub file was generated by pyright.
"""

from tensorflow.python.util.tf_export import tf_export

"""Decorator to overrides the gradient for a function."""
@tf_export("__internal__.ops.get_resource_handle_data", v1=[])
def get_resource_handle_data(graph_op):
  ...

def get_handle_data(source_t):
  """Obtains HandleData from a tensor."""
  ...

def copy_handle_data(source_t, target_t): # -> None:
  """Copies HandleData for variant and resource type tensors if available.

  The CppShapeInferenceResult::HandleData proto contains information about the
  shapes and types of the element tensors of resource/variant type tensors.
  We need to copy this across function boundaries, i.e., when capturing a
  placeholder or when returning a function tensor as output. If we don't do this
  the element tensors will have unknown shapes, e.g., if a TensorList variant
  tensor is captured as a placeholder, elements popped from that list would have
  unknown shape.

  Args:
    source_t: The tensor to copy HandleData from.
    target_t: The tensor to copy HandleData to.
  """
  ...

def set_handle_data(target_t, handle_data): # -> None:
  """Sets handle data on the giver tensor."""
  ...

def create_handle_data(shape, dtype):
  ...

