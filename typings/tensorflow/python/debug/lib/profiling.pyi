"""
This type stub file was generated by pyright.
"""

"""Data structures and algorithms for profiling information."""
class ProfileDatum:
  """Profile data point."""
  def __init__(self, device_name, node_exec_stats, file_path, line_number, func_name, op_type) -> None:
    """Constructor.

    Args:
      device_name: (string) name of the device.
      node_exec_stats: `NodeExecStats` proto.
      file_path: path to the source file involved in creating the op.
      line_number: line number in the file involved in creating the op.
      func_name: name of the function that the line belongs to.
      op_type: (string) Operation type.
    """
    ...
  
  @property
  def exec_time(self):
    """Op execution time plus pre- and post-processing."""
    ...
  


class AggregateProfile:
  """Profile summary data for aggregating a number of ProfileDatum."""
  def __init__(self, profile_datum) -> None:
    """Constructor.

    Args:
      profile_datum: (`ProfileDatum`) an instance of `ProfileDatum` to
        initialize this object with.
    """
    ...
  
  def add(self, profile_datum): # -> None:
    """Accumulate a new instance of ProfileDatum.

    Args:
      profile_datum: (`ProfileDatum`) an instance of `ProfileDatum` to
        accumulate to this object.
    """
    ...
  
  @property
  def node_count(self): # -> int:
    ...
  
  @property
  def node_exec_count(self): # -> int:
    ...
  


