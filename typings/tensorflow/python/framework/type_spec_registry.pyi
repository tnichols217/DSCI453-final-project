"""
This type stub file was generated by pyright.
"""

"""Registry for custom TypeSpecs."""
_TYPE_SPEC_TO_NAME = ...
_NAME_TO_TYPE_SPEC = ...
_REGISTERED_NAME_RE = ...
def register(name): # -> Callable[..., type[TypeSpec]]:
  """Decorator used to register a globally unique name for a TypeSpec subclass.

  Args:
    name: The name of the type spec.  Must be globally unique.  Must have the
      form `"{project_name}.{type_name}"`.  E.g. `"my_project.MyTypeSpec"`.

  Returns:
    A class decorator that registers the decorated class with the given name.
  """
  ...

def get_name(cls):
  """Returns the registered name for TypeSpec `cls`."""
  ...

def lookup(name):
  """Returns the TypeSpec that has been registered with name `name`."""
  ...

