"""
This type stub file was generated by pyright.
"""

from tensorflow.python.autograph.core import converter

"""Handles directives.

This converter removes the directive functions from the code and moves the
information they specify into AST annotations. It is a specialized form of
static analysis, one that is specific to AutoGraph.

Note that this requires that the actual directive functions are static - that
is, they do not change at runtime. So if you do something like this:

  tf.autograph.set_loop_options = <new function>

Then the directive will may no longer be recognized. Furthermore, if the
converted function is cached, such an action may be irreversible.
"""
STATIC_VALUE = ...
class _LoopScope:
  def __init__(self) -> None:
    ...
  


class DirectivesTransformer(converter.Base):
  """Parses compiler directives and converts them into AST annotations."""
  def visit_Name(self, node): # -> AST:
    ...
  
  def visit_Attribute(self, node): # -> AST:
    ...
  
  def visit_Assign(self, node): # -> AST:
    ...
  
  def visit_AugAssign(self, node): # -> AST:
    ...
  
  def visit_Expr(self, node): # -> AST | None:
    ...
  
  def visit_While(self, node): # -> AST:
    ...
  
  def visit_For(self, node): # -> AST:
    ...
  


def transform(node, ctx): # -> AST | list[Any] | tuple[Any, ...] | Any:
  ...

