"""
This type stub file was generated by pyright.
"""

import enum
from tensorflow.python.util.tf_export import tf_export

"""Thread-local context managers for AutoGraph."""
stacks = ...
@tf_export('__internal__.autograph.control_status_ctx', v1=[])
def control_status_ctx(): # -> ControlStatusCtx | Any:
  """Returns the current control context for autograph.

  This method is useful when calling `tf.__internal__.autograph.tf_convert`,
  The context will be used by tf_convert to determine whether it should convert
  the input function. See the sample usage like below:

  ```
  def foo(func):
    return tf.__internal__.autograph.tf_convert(
       input_fn, ctx=tf.__internal__.autograph.control_status_ctx())()
  ```

  Returns:
    The current control context of autograph.
  """
  ...

class Status(enum.Enum):
  UNSPECIFIED = ...
  ENABLED = ...
  DISABLED = ...


class ControlStatusCtx:
  """A context that tracks whether autograph is enabled by the user."""
  def __init__(self, status, options=...) -> None:
    ...
  
  def __enter__(self): # -> Self:
    ...
  
  def __repr__(self): # -> str:
    ...
  
  def __exit__(self, unused_type, unused_value, unused_traceback): # -> None:
    ...
  


class NullCtx:
  """Helper substitute for contextlib.nullcontext."""
  def __enter__(self): # -> None:
    ...
  
  def __exit__(self, unused_type, unused_value, unused_traceback): # -> None:
    ...
  


INSPECT_SOURCE_SUPPORTED = ...
