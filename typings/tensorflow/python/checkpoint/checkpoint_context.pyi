"""
This type stub file was generated by pyright.
"""

import contextlib
import threading

"""Context for saving checkpoint."""
class PreemptionSaveContext(threading.local):
  """A context for saving checkpoint upon preemption."""
  def __init__(self) -> None:
    ...
  
  def enter_preemption_save_context(self): # -> None:
    ...
  
  def exit_preemption_save_context(self): # -> None:
    ...
  
  def in_preemption_save_context(self): # -> bool:
    ...
  


_preemption_save_context = ...
@contextlib.contextmanager
def preemption_save_context(): # -> Generator[None, Any, None]:
  ...

def in_preemption_save_context(): # -> bool:
  ...

class AsyncMetricsContext(threading.local):
  """A context for controlling metrics recording when async checkpoint is used.
  """
  def __init__(self) -> None:
    ...
  
  def enter_async_metrics_context(self): # -> None:
    ...
  
  def exit_async_metrics_context(self): # -> None:
    ...
  
  def in_async_metrics_context(self): # -> bool:
    ...
  


_async_metrics_context = ...
@contextlib.contextmanager
def async_metrics_context(): # -> Generator[None, Any, None]:
  ...

def in_async_metrics_context(): # -> bool:
  ...

