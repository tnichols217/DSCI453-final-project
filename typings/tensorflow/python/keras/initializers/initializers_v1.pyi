"""
This type stub file was generated by pyright.
"""

from tensorflow.python.ops import init_ops

"""Keras initializers for TF 1."""
_v1_zeros_initializer = init_ops.Zeros
_v1_ones_initializer = init_ops.Ones
_v1_constant_initializer = init_ops.Constant
_v1_variance_scaling_initializer = init_ops.VarianceScaling
_v1_orthogonal_initializer = init_ops.Orthogonal
_v1_identity = init_ops.Identity
_v1_glorot_uniform_initializer = init_ops.GlorotUniform
_v1_glorot_normal_initializer = init_ops.GlorotNormal
class RandomNormal(init_ops.RandomNormal):
  def __init__(self, mean=..., stddev=..., seed=..., dtype=...) -> None:
    ...
  


class RandomUniform(init_ops.RandomUniform):
  def __init__(self, minval=..., maxval=..., seed=..., dtype=...) -> None:
    ...
  


class TruncatedNormal(init_ops.TruncatedNormal):
  def __init__(self, mean=..., stddev=..., seed=..., dtype=...) -> None:
    ...
  


class LecunNormal(init_ops.VarianceScaling):
  def __init__(self, seed=...) -> None:
    ...
  
  def get_config(self): # -> dict[str, Any | None]:
    ...
  


class LecunUniform(init_ops.VarianceScaling):
  def __init__(self, seed=...) -> None:
    ...
  
  def get_config(self): # -> dict[str, Any | None]:
    ...
  


class HeNormal(init_ops.VarianceScaling):
  def __init__(self, seed=...) -> None:
    ...
  
  def get_config(self): # -> dict[str, Any | None]:
    ...
  


class HeUniform(init_ops.VarianceScaling):
  def __init__(self, seed=...) -> None:
    ...
  
  def get_config(self): # -> dict[str, Any | None]:
    ...
  


