"""
This type stub file was generated by pyright.
"""

from tensorflow.python.util import dispatch as _dispatch
from tensorflow.python.util.tf_export import tf_export

"""Python wrappers around TensorFlow ops.

This file is MACHINE GENERATED! Do not edit.
"""
@_dispatch.add_fallback_dispatch_list
@_dispatch.add_type_based_api_dispatcher
@tf_export('check_preemption')
def check_preemption(preemption_key: str = ..., name=...): # -> object | _dispatcher_for_check_preemption | Operation | None:
  r"""Check if a preemption notice has been received in coordination service.

  Args:
    preemption_key: An optional `string`. Defaults to `"TF_DEFAULT_PREEMPTION_NOTICE_KEY"`.
      Key for preemption check in coordination service.
    name: A name for the operation (optional).

  Returns:
    The created Operation.
  """
  ...

CheckPreemption = ...
_dispatcher_for_check_preemption = check_preemption._tf_type_based_dispatcher.Dispatch
def check_preemption_eager_fallback(preemption_key: str, name, ctx): # -> None:
  ...

